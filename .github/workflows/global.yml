name: Deploy Next.js site to Uberspace qr-bike global

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  repository_dispatch:
    types: ["webhook", "directus-update-global"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    environment: global
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.UBERSPACE_HOST }}
          username: ${{ secrets.UBERSPACE_USER }}
          key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
          script: |
            echo "Update project"
            cd /home/${{ secrets.UBERSPACE_USER }}/${{ vars.UBERSPACE_PATH }}
            git pull --rebase
            yarn install
  build_and_deploy:
    runs-on: ubuntu-latest
    needs: update
    environment: global
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        env:
          UMAMI_SITE_SRC: ${{ vars.UMAMI_SITE_SRC }}
          UMAMI_SITE_ID: ${{ secrets.UMAMI_SITE_ID }}
          DIRECTUS_PREFIX: ${{ vars.DIRECTUS_PREFIX }}
          DIRECTUS_TOKEN: ${{ secrets.DIRECTUS_TOKEN }}
          DIRECTUS_REDIRECT: ${{ vars.DIRECTUS_REDIRECT }}
          DIRECTUS_HOSTNAME: ${{ vars.DIRECTUS_HOSTNAME }}
          DIRECTUS_URL: ${{ vars.DIRECTUS_URL }}
          MAIL_TRANSPORT: ${{ vars.MAIL_TRANSPORT }}
          MAIL_SMTP_HOST: ${{ vars.MAIL_SMTP_HOST }}
          MAIL_SMTP_USER: ${{ secrets.MAIL_SMTP_USER }}
          MAIL_SMTP_PASS: ${{ secrets.MAIL_SMTP_PASS }}
          MAIL_SMTP_PORT: ${{ vars.MAIL_SMTP_PORT }}
          MAIL_SMTP_SECURE: ${{ vars.MAIL_SMTP_SECURE }}
      - name: rsync .next folder
        uses: burnett01/rsync-deployments@5.2.2
        with:
          switches: -avzr
          path: /.next
          remote_path: /home/${{ secrets.UBERSPACE_USER }}/${{ vars.UBERSPACE_PATH }}/
          remote_host: ${{ secrets.UBERSPACE_HOST }}
          remote_user: ${{ secrets.UBERSPACE_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
      - name: rsync public folder
        uses: burnett01/rsync-deployments@5.2.2
        with:
          switches: -avzr
          path: /public
          remote_path: /home/${{ secrets.UBERSPACE_USER }}/${{ vars.UBERSPACE_PATH }}/
          remote_host: ${{ secrets.UBERSPACE_HOST }}
          remote_user: ${{ secrets.UBERSPACE_USER }}
          remote_key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
  restart:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    environment: global
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.UBERSPACE_HOST }}
          username: ${{ secrets.UBERSPACE_USER }}
          key: ${{ secrets.DEPLOY_KEY_PRIVATE }}
          script: |
            echo "Restart Service"
            supervisorctl stop ${{ vars.UBERSPACE_SERVICE }}
            supervisorctl start ${{ vars.UBERSPACE_SERVICE }}